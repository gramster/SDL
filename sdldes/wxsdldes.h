/*
 * File:    wxsdldes.h
 * Purpose: main application module, generated by wxBuilder.
 */

#ifndef _INC_WXSDLDES_H
#define _INC_WXSDLDES_H

/*
 * Forward declarations of all top-level window classes.
 */
class  DialogBoxClass6;
class  DialogBoxClass15;
class  DialogBoxClass25;
class  FrameClass36;

/*
 * Class representing the entire Application
 */
class AppClass: public wxApp
{
 public:
  DialogBoxClass6 *dialogbox5;
  DialogBoxClass15 *dialogbox14;
  DialogBoxClass25 *dialogbox24;
  FrameClass36 *frame35;

  wxFrame *OnInit(void);
  Bool ParseCommandLine(void);
};

class DialogBoxClass6: public wxDialogBox
{
 private:
 protected:
 public:
  // Panel items for reference within the program.
  wxMessage *message7;
  wxMessage *message8;
  wxMessage *message9;
  wxButton *button10;

  // Possible bitmaps for buttons.

  // Constructor and destructor
  DialogBoxClass6(wxFrame *parent, char *title, Bool modal, int x, int y, int width, int height, long style, char *name);
  ~DialogBoxClass6(void);

 void OnSize(int w, int h);
};

void ButtonProc9(wxButton& but, wxCommandEvent& event);

class DialogBoxClass15: public wxDialogBox
{
 private:
 protected:
 public:
  // Panel items for reference within the program.
  wxButton *button16;
  wxButton *button18;
  wxText *text20;

  // Possible bitmaps for buttons.

  // Constructor and destructor
  DialogBoxClass15(wxFrame *parent, char *title, Bool modal, int x, int y, int width, int height, long style, char *name);
  ~DialogBoxClass15(void);

 void OnSize(int w, int h);
};

void ButtonProc15(wxButton& but, wxCommandEvent& event);

void ButtonProc17(wxButton& but, wxCommandEvent& event);

void TextProc19(wxText& text, wxCommandEvent& event);

class DialogBoxClass25: public wxDialogBox
{
 private:
 protected:
 public:
  // Panel items for reference within the program.
  wxButton *button26;
  wxButton *button28;
  wxMessage *message30;
  wxListBox *listbox31;

  // Possible bitmaps for buttons.

  // Constructor and destructor
  DialogBoxClass25(wxFrame *parent, char *title, Bool modal, int x, int y, int width, int height, long style, char *name);
  ~DialogBoxClass25(void);

 void OnSize(int w, int h);
};

void ButtonProc25(wxButton& but, wxCommandEvent& event);

void ButtonProc27(wxButton& but, wxCommandEvent& event);

void ListBoxProc30(wxListBox& lbox, wxCommandEvent& event);

class FrameClass36: public wxFrame
{
 private:
 protected:
 public:
  // Constructor and destructor
  FrameClass36(wxFrame *parent, char *title, int x, int y, int width, int height, long style, char *name);
  ~FrameClass36(void);

 Bool OnClose(void);
 void OnSize(int w, int h);
 void OnMenuCommand(int commandId);
};

/* Menu identifiers
 */
// &File
#define FILE 1
// &New
#define ID_NEWFILE 2
// &Open..
#define ID_OPENFILE 3
// &Save
#define ID_SAVEFILE 4
// Save &as..
#define ID_SAVEFILEAS 5
// &Exit
#define ID_EXIT 6
// &Edit
#define EDIT 7
// Undo
#define ID_UNDO 8
// Cu&t
#define ID_CUT 9
// &Copy
#define ID_COPY 10
// &Paste
#define ID_PASTE 11
// C&lear
#define ID_CLEAR 12
// &Search
#define SEARCH 13
// &Find..
#define ID_FIND 14
// &Replace..
#define ID_REPLACE 15
// Replace &again
#define ID_REREPLACE 16
// &Go to line...
#define ID_GOTOLINE 17
// &Next error
#define ID_GOTONEXT 18
// &Previous error
#define ID_GOTOPREV 19
// &Project
#define PROJECT 20
// &New
#define ID_NEWPROJ 21
// &Open..
#define ID_OPENPROJ 22
// &Close
#define ID_CLOSEPROJ 23
// &Save
#define ID_SAVEPROJ 24
// Save &as..
#define ID_SAVEPROJAS 25
// &Add File..
#define ID_ADDFILE 26
// &Remove File..
#define ID_REMOVEFILE 27
// &Compile
#define COMPILE 28
// Define...
#define ID_DEFINENAME 29
// Undefine...
#define ID_UNDEFINENAME 30
// &Compile
#define ID_COMPILE 31
// &Run
#define ID_RUN 32
// &Export C++
#define ID_EXPORT 33
// &Options
#define OPTIONS 34
// &Edit Options...
#define ID_EDITOPT 35
// &Save Options
#define ID_SAVEOPT 36
// &Help
#define HELP 37
// &Contents
#define ID_CONTENTS 38
// &Search for Help on..
#define ID_HELPSEARCH 39
// &About..
#define ID_ABOUT 40

/* Toolbar identifiers
 */

#endif /* mutual exclusion */
