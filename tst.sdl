/* test of procedures and procedure parameters. Should produce:

0      C 1  
0      C 2  
0      C 3  
0      D 2  
0      D 1  
### 3
### UNDEFINED
### UNDEFINED
0	C 4
### 256
### 266
0	C 5
### 266
### 276
0	D 5
0	D 4
### 33
### 3
0	D 3

*/

system test;
	block testblk;
		process testprocess referenced;
	endblock;
endsystem;

process system test/block testblk testprocess(1,1);
	dcl y integer := 256, z pid;
	procedure testprocedure;
	fpar in/out x integer, in zz integer;
		procedure testprocedure2;
		fpar in/out x integer, in zz integer;
		start;
			Write x;
			Write zz;
			return;
		endprocedure;

		start;
			write x;
			write zz;
			call testprocedure2(zz, zz+10);
			nextstate stateA;
		state stateA;
			provided true;
			task x := x + 1;
			nextstate stateB;
		state stateB;
			provided true;
			task x := x + 1;
			nextstate stateC;
		state stateC;
			provided true;
			task x := x + 1;
			nextstate stateD;
		state stateD;
			provided true;
			task y:= 33;
			return;
	endprocedure;
	start;
		nextstate idle1;
	state idle1;
		provided true;
		write self;
		write sender;
		write offspring;
		call testprocedure(y, y+10);
		write y;
		nextstate idle2;
	state idle2;
		provided true;
		task z := self;
		write self;
		task y:= -y;
		stop;
endprocess;
