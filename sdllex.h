#ifndef _SDLLEX_H
#define _SDLLEX_H

#include "sdl.h"

// Lexical analyser tokens

typedef enum
{
	/* Reserved words */

	T_ACTIVE, T_ADDING, T_ALL, T_ALTERNATIVE, T_AND, T_ARRAY,
	T_AXIOMS, T_BLOCK, T_CALL, T_CHANNEL, T_COMMENT, T_CONNECT,
	T_CONSTANT, T_CONSTANTS, T_CREATE, T_DCL, T_DECISION, T_DEFAULT,
	T_ELSE, T_ENDALTERNATIVE, T_ENDBLOCK, T_ENDCHANNEL, T_ENDDECISION,
	T_ENDGENERATOR, T_ENDMACRO, T_ENDNEWTYPE, T_ENDPROCEDURE,
	T_ENDPROCESS, T_ENDREFINEMENT, T_ENDSELECT, T_ENDSERVICE,
	T_ENDSTATE, T_ENDSUBSTRUCTURE, T_ENDSYNTYPE, T_ENDSYSTEM,
	T_ENV, T_ERROR, T_EXPORT, T_EXPORTED, T_EXTERNAL, T_FI, T_FOR,
	T_FPAR, T_FROM, T_GENERATOR, T_IF, T_IMPORT, T_IMPORTED, T_IN,
	T_INHERITS, T_INPUT, T_JOIN, T_LITERAL, T_LITERALS, T_MACRO,
	T_MACRODEFINITION, T_MACROID, T_MAP, T_MOD, T_NAMECLASS, T_NEWTYPE,
	T_NEXTSTATE, T_NOT, T_NOW, T_OF, T_OFFSPRING, T_OPERATOR, T_OPERATORS,
	T_OR, T_ORDERING, T_OUT, T_OUTPUT, T_PARENT, T_PRIORITY,
	T_PROCEDURE, T_PROCESS, T_PROVIDED, T_REFERENCED, T_REFINEMENT,
	T_REM, T_RESET, T_RETURN, T_REVEALED, T_REVERSE, T_SAVE, T_SELECT,
	T_SELF, T_SENDER, T_SERVICE, T_SET, T_SIGNAL, T_SIGNALLIST,
	T_SIGNALROUTE, T_SIGNALSET, T_SPELLING, T_START, T_STATE, T_STOP,
	T_STRUCT, T_SUBSTRUCTURE, T_SYNONYM, T_SYNTYPE, T_SYSTEM, T_TASK,
	T_THEN, T_TIMER, T_TO, T_TYPE, T_VIA, T_VIEW, T_VIEWED, T_WITH,
	T_XOR,

	/* Non-standard reserved words */

	T_TRUE, T_FALSE,

	/* single character punctuation */

	T_SEMICOLON, T_COMMA, T_LEFTPAR, T_RIGHTPAR, T_MINUS, T_PLUS,
	T_ASTERISK, T_SLASH, T_EQUALS, T_COLON, T_LESS, T_GT, T_BANG, T_QUOTE,

	/* punctuation token > 1 char */

	T_EQ, T_IMPLIES, T_NE, T_LE, T_GE, T_CONCAT, T_ASGN, T_BIMP,
	T_RET, T_SLST, T_ELST,

	/* Basic tokens - names, strings and integers */

	T_NAME, T_STRING, T_INTEGER, T_REAL,

	/* Special tokens */

	T_UNDEF, T_EOF
} SDL_token_t;

extern SDL_token_t symbol;
extern char token[MAX_TOKEN_LENGTH];
extern s_code_word_t tokenVal;

#endif

