/*
 * File:    wxsdldes.cpp
 * Purpose: main application module, generated by wxBuilder.
 */

#include "wx.h"
#include "wx_help.h"
#include "wxsdldes.h"

// Declare an instance of the application: allows the program to start

AppClass theApp;

// Called to initialize the program

wxFrame *AppClass::OnInit(void)
{
  // Initialize all the top-level window members to NULL.

  about_dialog = NULL;
  define_dialog = NULL;
  undefine_dialog = NULL;
  frame35 = NULL;
  if (!ParseCommandLine())
    return NULL;

  return frame35 = 
    new FrameClass36(NULL, "SDL/Designer++", 197, 119, 554, 300, wxSDI | wxDEFAULT_FRAME, "frame35");
}

// Parses the command line
Bool AppClass::ParseCommandLine(void)
{
  return TRUE;
}

AboutDialog::AboutDialog(wxFrame *parent, char *title, Bool modal, int x, int y, int width, int height, long style, char *name):
  wxDialogBox(parent, title, modal, x, y, width, height, style, name)
{
  // Create panel items
  message7 = new wxMessage(this, "SDL*Design v0.1", 76, 28, 0, "message7");
  message8 = new wxMessage(this, "by Graham Wheeler", 72, 62, 0, "message8");
  message9 = new wxMessage(this, "(c) 1994", 100, 96, 0, "message9");
  button10 = new wxButton(this, (wxFunction)ButtonProc9, "OK", 118, 130, 48, 28, 0, "button10");
}

AboutDialog::~AboutDialog(void)
{

}

void AboutDialog::OnSize(int w, int h)
{
  wxDialogBox::OnSize(w, h);
}

void ButtonProc9(wxButton& but, wxCommandEvent& event)
{
}

DefineDialog::DefineDialog(wxFrame *parent, char *title, Bool modal, int x, int y, int width, int height, long style, char *name):
  wxDialogBox(parent, title, modal, x, y, width, height, style, name)
{
  // Create panel items
  button16 = new wxButton(this, (wxFunction)ButtonProc15, "OK", 50, 70, 60, 28, 0, "button16");
  button18 = new wxButton(this, (wxFunction)ButtonProc17, "Cancel", 146, 70, 60, 28, 0, "button18");
  text20 = new wxText(this, (wxFunction)TextProc19, NULL, NULL, 26, 20, 214, 24, 0, "text20");


}

DefineDialog::~DefineDialog(void)
{

}

void DefineDialog::OnSize(int w, int h)
{
  wxDialogBox::OnSize(w, h);
}

void ButtonProc15(wxButton& but, wxCommandEvent& event)
{
}

void ButtonProc17(wxButton& but, wxCommandEvent& event)
{
}

void TextProc19(wxText& text, wxCommandEvent& event)
{
}

UndefineDialog::UndefineDialog(wxFrame *parent, char *title, Bool modal, int x, int y, int width, int height, long style, char *name):
  wxDialogBox(parent, title, modal, x, y, width, height, style, name)
{
  // Create panel items
  button26 = new wxButton(this, (wxFunction)ButtonProc25, "OK", 110, 130, 58, 28, 0, "button26");
  button28 = new wxButton(this, (wxFunction)ButtonProc27, "Cancel", 220, 130, 60, 28, 0, "button28");
  message30 = new wxMessage(this, "Name:", 24, 20, 0, "message30");
  listbox31 = new wxListBox(this, (wxFunction)ListBoxProc30, NULL, wxSINGLE, 80, 22, 260, 82, 0, NULL, 0, "listbox31");


}

UndefineDialog::~UndefineDialog(void)
{

}

void UndefineDialog::OnSize(int w, int h)
{
  wxDialogBox::OnSize(w, h);
}

void ButtonProc25(wxButton& but, wxCommandEvent& event)
{
}

void ButtonProc27(wxButton& but, wxCommandEvent& event)
{
}

void ListBoxProc30(wxListBox& lbox, wxCommandEvent& event)
{
}

FrameClass36::FrameClass36(wxFrame *parent, char *title, int x, int y, int width, int height, long style, char *name):
  wxFrame(parent, title, x, y, width, height, style, name)
{
  // Create a menu bar for the frame
  wxMenuBar *menuBar1 = new wxMenuBar;
  wxMenu *menu1 = new wxMenu;
  menu1->Append(ID_NEWFILE, "&New");
  menu1->Append(ID_OPENFILE, "&Open..");
  menu1->AppendSeparator();
  menu1->Append(ID_SAVEFILE, "&Save");
  menu1->Append(ID_SAVEFILEAS, "Save &as..");
  menu1->AppendSeparator();
  menu1->Append(ID_EXIT, "&Exit");
  menuBar1->Append(menu1, "&File");
  wxMenu *menu2 = new wxMenu;
  menu2->Append(ID_UNDO, "Undo");
  menu2->Append(ID_CUT, "Cu&t");
  menu2->Append(ID_COPY, "&Copy");
  menu2->Append(ID_PASTE, "&Paste");
  menu2->Append(ID_CLEAR, "C&lear");
  menuBar1->Append(menu2, "&Edit");
  wxMenu *menu3 = new wxMenu;
  menu3->Append(ID_FIND, "&Find..");
  menu3->Append(ID_REPLACE, "&Replace..");
  menu3->Append(ID_REREPLACE, "Replace &again");
  menu3->AppendSeparator();
  menu3->Append(ID_GOTOLINE, "&Go to line...");
  menu3->Append(ID_GOTONEXT, "&Next error");
  menu3->Append(ID_GOTOPREV, "&Previous error");
  menuBar1->Append(menu3, "&Search");
  wxMenu *menu4 = new wxMenu;
  menu4->Append(ID_NEWPROJ, "&New");
  menu4->Append(ID_OPENPROJ, "&Open..");
  menu4->Append(ID_CLOSEPROJ, "&Close");
  menu4->AppendSeparator();
  menu4->Append(ID_SAVEPROJ, "&Save");
  menu4->Append(ID_SAVEPROJAS, "Save &as..");
  menu4->AppendSeparator();
  menu4->Append(ID_ADDFILE, "&Add File..");
  menu4->Append(ID_REMOVEFILE, "&Remove File..");
  menuBar1->Append(menu4, "&Project");
  wxMenu *menu5 = new wxMenu;
  menu5->Append(ID_DEFINENAME, "Define...");
  menu5->Append(ID_UNDEFINENAME, "Undefine...");
  menu5->Append(ID_COMPILE, "&Compile");
  menu5->Append(ID_RUN, "&Run");
  menu5->AppendSeparator();
  menu5->Append(ID_EXPORT, "&Export C++");
  menuBar1->Append(menu5, "&Compile");
  wxMenu *menu6 = new wxMenu;
  menu6->Append(ID_EDITOPT, "&Edit Options...");
  menu6->Append(ID_SAVEOPT, "&Save Options");
  menuBar1->Append(menu6, "&Options");
  wxMenu *menu7 = new wxMenu;
  menu7->Append(ID_CONTENTS, "&Contents");
  menu7->Append(ID_HELPSEARCH, "&Search for Help on..");
  menu7->AppendSeparator();
  menu7->Append(ID_ABOUT, "&About..");
  menuBar1->Append(menu7, "&Help");
  SetMenuBar(menuBar1);

  // Ensure the subwindows get resized o.k.
  OnSize(width, height);

  // Centre frame on the screen.
  Centre(wxBOTH);

  // Show the frame.
  Show(TRUE);
}

FrameClass36::~FrameClass36(void)
{
}

Bool FrameClass36::OnClose(void)
{
  // Clean up any associated data here.
  theApp.frame35 = NULL;
  return TRUE;
}

void FrameClass36::OnSize(int w, int h)
{
  // Let default member handle sizing for only one subwindow.
  wxFrame::OnSize(w, h);
}

void FrameClass36::OnMenuCommand(int commandId)
{
  switch (commandId)
  {
    // &New
    case ID_NEWFILE:
    {
      break;
    }
    // &Open..
    case ID_OPENFILE:
    {
      // Show file selector.
      char *f = wxFileSelector("Open SDl File", NULL, "noname.sdl", ".sdl", "*..sdl");
      if (!f)
        return;
      break;
    }
    // &Save
    case ID_SAVEFILE:
    {
      break;
    }
    // Save &as..
    case ID_SAVEFILEAS:
    {
      break;
    }
    // &Exit
    case ID_EXIT:
    {
      break;
    }
    // Undo
    case ID_UNDO:
    {
      break;
    }
    // Cu&t
    case ID_CUT:
    {
      break;
    }
    // &Copy
    case ID_COPY:
    {
      break;
    }
    // &Paste
    case ID_PASTE:
    {
      break;
    }
    // C&lear
    case ID_CLEAR:
    {
      break;
    }
    // &Find..
    case ID_FIND:
    {
      break;
    }
    // &Replace..
    case ID_REPLACE:
    {
      break;
    }
    // Replace &again
    case ID_REREPLACE:
    {
      break;
    }
    // &Go to line...
    case ID_GOTOLINE:
    {
      break;
    }
    // &Next error
    case ID_GOTONEXT:
    {
      break;
    }
    // &Previous error
    case ID_GOTOPREV:
    {
      break;
    }
    // &New
    case ID_NEWPROJ:
    {
      break;
    }
    // &Open..
    case ID_OPENPROJ:
    {
      // Show file selector.
      char *f = wxFileSelector("Open Project...", NULL, "noname.spf", ".spf", "*..spf");
      if (!f)
        return;
      break;
    }
    // &Close
    case ID_CLOSEPROJ:
    {
      break;
    }
    // &Save
    case ID_SAVEPROJ:
    {
      break;
    }
    // Save &as..
    case ID_SAVEPROJAS:
    {
      break;
    }
    // &Add File..
    case ID_ADDFILE:
    {
      break;
    }
    // &Remove File..
    case ID_REMOVEFILE:
    {
      break;
    }
    // Define...
    case ID_DEFINENAME:
    {
      break;
    }
    // Undefine...
    case ID_UNDEFINENAME:
    {
      break;
    }
    // &Compile
    case ID_COMPILE:
    {
      break;
    }
    // &Run
    case ID_RUN:
    {
      break;
    }
    // &Export C++
    case ID_EXPORT:
    {
      break;
    }
    // &Edit Options...
    case ID_EDITOPT:
    {
      break;
    }
    // &Save Options
    case ID_SAVEOPT:
    {
      break;
    }
    // &Contents
    case ID_CONTENTS:
    {
      break;
    }
    // &Search for Help on..
    case ID_HELPSEARCH:
    {
      break;
    }
    // &About..
    case ID_ABOUT:
    {
      break;
    }
  default:
    break;
  }
}

